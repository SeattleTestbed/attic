Index: test_nat_servers_running.py
===================================================================
--- test_nat_servers_running.py	(revision 7245)
+++ test_nat_servers_running.py	(working copy)
@@ -10,19 +10,23 @@
 
 <Purpose>
   Send out emails if fewer than 10 nat servers are running
-  or we can not get a response from nat_check_bi_directional()
+
 """
 
-import sys
 import send_gmail
 import integrationtestlib
-import random
 
+from repyportability import *
+add_dy_support(locals())
 
-# use repy helper to bring in advertise.repy
-import repyhelper
-repyhelper.translate_and_import('NATLayer_rpc.repy')
+advertise = dy_import_module('advertise.repy')
+nat_forwarder_common_lib = dy_import_module('nat_forwarder_common_lib.repy')
 
+
+# This is the key we'll be monitoring
+nat_forwarder_key = nat_forwarder_common_lib.NAT_FORWARDER_KEY
+NAT_TEST_FAIL_NOTICE = "test_nat_servers_running FAILED"
+
 def main():
   # initialize the gmail module
   success,explanation_str = send_gmail.init_gmail()
@@ -30,39 +34,37 @@
     integrationtestlib.log(explanation_str)
     sys.exit(0)
 
-  #add Eric Kimbrel to the email notify list
-  integrationtestlib.notify_list.append("lekimbrel@gmail.com")
-  
-  notify_str =''
-
-
   # PART 1 verify that there are at least 10 nat forwarders running
   integrationtestlib.log("Looking up nat forwarders")  
+
+  nat_forwarders = []
   try:
-    nodes = nat_forwarder_list_lookup()
-    total_nodes = advertise_lookup('NATFORWARDERRUNNING')
-  except:
-    nodes = [] #make sure we fail if there was an excpetion
+    nat_forwarders = advertise.advertise_lookup(nat_forwarder_key)
+  except Exception, e:
+    integrationtestlib.handle_exception("Got exception when looking up nat forwarders", NAT_TEST_FAIL_NOTICE)
+    return
 
-  if len(nodes) < 10:
-    integrationtestlib.log('WARNING: only '+str(len(nodes))+' forwarders are avaiable')
-    integrationtestlib.log('WARNING: only '+str(len(total_nodes))+' forwarders are running')
-    
-    notify_str += 'WARNING: test_nat_servers_running.py FAILED, only '+str(len(nodes))+' nat forwarders are avaiable!,  '+str(len(total_nodes))+' are running.'
+  notify_str = ''
+  if len(nat_forwarders) < 10:
+    notify_str += ('WARNING: only '+ str(len(nat_forwarders))
+      + ' nat forwarders are advertising under the key: '
+      + repr(nat_forwarder_key) + '\n'
+      + "Advertising forwarders: " + str(nat_forwarders) + '\n')
+    integrationtestlib.log(notify_str)
+    integrationtestlib.notify(notify_str, NAT_TEST_FAIL_NOTICE)
+    return
 
 
-  # PART 2 check that nat forwarders are responsive
-  integrationtestlib.log("Checking that we can talk to a nat forwarder")  
-  try:
-    response = nat_check_bi_directional(getmyip(),random.randint(20000,62000))
-  except Exception, e:
-    notify_str += 'WARNING: could not a get a response from nat forwarders: '+str(e)
-  
-    integrationtestlib.log('WARNING: could not get a response from nat forwarders '+str(e))
+  # # PART 2 check that nat forwarders are responsive
+  # TODO: Change this to use Affixes on repyV2
+  # integrationtestlib.log("Checking that we can talk to a nat forwarder")
+  # try:
+  #   response = nat_check_bi_directional(getmyip(),random.randint(20000,62000))
+  # except Exception, e:
+  #   notify_str += 'WARNING: could not a get a response from nat forwarders: '+str(e)
 
-  if notify_str != '':
-    integrationtestlib.notify(notify_str,'nat test fail notice')
-    
+  #   integrationtestlib.log('WARNING: could not get a response from nat forwarders '+str(e))
+
   integrationtestlib.log("Finished running nat_tests")
   print "------------------------------------------------------------"
 
