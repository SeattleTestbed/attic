Index: portability/repyportability.py
===================================================================
--- portability/repyportability.py	(revision 7143)
+++ portability/repyportability.py	(working copy)
@@ -222,6 +222,25 @@
 
 # This function makes the dy_* functions available.
 def add_dy_support(_context):
+  """
+  <Purpose>
+    Enable usage of repy's dynamic library linking.  This should only
+    be called on the module-level.
+
+  <Arguments>
+    _context:
+      The context that dylink's functions should be inserted into.
+
+  <Side Effects>
+    Public functions from dylink.repy will be inserted into _context.
+    _context should be globals() for a module.
+
+  <Exceptions>
+    Exception is raised when a module import fails.
+
+  <Returns>
+    None
+  """
   # Add dylink support
   repyhelper.translate_and_import("dylink.repy", callfunc = 'initialize')
   
Index: seash/modules/clearinghouse/seattleclearinghouse_xmlrpc.py
===================================================================
--- seash/modules/clearinghouse/seattleclearinghouse_xmlrpc.py	(revision 7143)
+++ seash/modules/clearinghouse/seattleclearinghouse_xmlrpc.py	(working copy)
@@ -52,6 +52,10 @@
 import socket
 import xmlrpclib
 
+# If a user does not provide us with an API key, we'll need to load
+# their private key instead.
+from repyportability import add_dy_support
+add_dy_support(locals())
 
 # Location of a file containing one or more PEM-encoded CA certificates
 # concatenated together. This is required if using allow_ssl_insecure=False.
@@ -130,9 +134,7 @@
     # available when the user provides their api key and doesn't require
     # it to be retrieved.
     try:
-      import repyhelper
-      import repyportability
-      repyhelper.translate_and_import("rsa.repy")
+      dy_import_module_symbols("rsa.repy")
     except ImportError, e:
       raise SeattleClearinghouseError("Unable to get API key from SeattleClearinghouse " +
                              "because a required python or repy module " + 
Index: seattlegeni/xmlrpc_clients/seattleclearinghouse_xmlrpc.py
===================================================================
--- seattlegeni/xmlrpc_clients/seattleclearinghouse_xmlrpc.py	(revision 7143)
+++ seattlegeni/xmlrpc_clients/seattleclearinghouse_xmlrpc.py	(working copy)
@@ -52,6 +52,10 @@
 import socket
 import xmlrpclib
 
+# If a user does not provide us with an API key, we'll need to load
+# their private key instead.
+from repyportability import add_dy_support
+add_dy_support(locals())
 
 # Location of a file containing one or more PEM-encoded CA certificates
 # concatenated together. This is required if using allow_ssl_insecure=False.
@@ -130,9 +134,7 @@
     # available when the user provides their api key and doesn't require
     # it to be retrieved.
     try:
-      import repyhelper
-      import repyportability
-      repyhelper.translate_and_import("rsa.repy")
+      dy_import_module_symbols("rsa.repy")
     except ImportError, e:
       raise SeattleClearinghouseError("Unable to get API key from SeattleClearinghouse " +
                              "because a required python or repy module " + 
