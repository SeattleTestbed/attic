1381,1382c1381,1382
<   if platform.machine().startswith('armv'):
<     return setup_nokia_startup()
---
>   #if platform.machine().startswith('armv'):
>   #  return setup_nokia_startup()
2040,2055c2040,2055
<     if platform.machine().startswith('armv'):
<       # The full path to the startup script.
<       startup_script_path = "/etc/init.d/nokia_seattle_startup.sh"
<       # The full path to the symlink.
<       symlink_path = "/etc/rc2.d/S99startseattle"
<       
<       # If the startup script or the symlink exist, then Seattle was installed.
<       return os.path.exists(startup_script_path) or \
<                 os.path.lexists(symlink_path)
< 
<     else:
<       # Check to see if the crontab has been modified to run seattle.
<       crontab_contents_stdout,crontab_contents_stderr = \
<           subprocess.Popen(["crontab", "-l"], stdout=subprocess.PIPE,
<                            stderr=subprocess.PIPE).communicate()
<       return get_starter_file_name() in crontab_contents_stdout
---
>     #if platform.machine().startswith('armv'):
>     #  # The full path to the startup script.
>     #  startup_script_path = "/etc/init.d/nokia_seattle_startup.sh"
>     #  # The full path to the symlink.
>     #  symlink_path = "/etc/rc2.d/S99startseattle"
>     #  
>     #  # If the startup script or the symlink exist, then Seattle was installed.
>     #  return os.path.exists(startup_script_path) or \
>     #            os.path.lexists(symlink_path)
> 
>     #else:
>     # Check to see if the crontab has been modified to run seattle.
>     crontab_contents_stdout,crontab_contents_stderr = \
>         subprocess.Popen(["crontab", "-l"], stdout=subprocess.PIPE,
>                          stderr=subprocess.PIPE).communicate()
>     return get_starter_file_name() in crontab_contents_stdout
2165,2173c2165,2173
<     if IS_ANDROID == False:
<       _output('Seattle is being installed on a Nokia N800/900 Internet Tablet.')
<       # JAC: I can't import this on Windows, so will do it here...
<       import pwd
<       # if the current user name is not 'root'
<       if pwd.getpwuid(os.getuid())[0] != 'root':
<         _output('Please run the installer as root. This can be done by ' \
<                   + 'installing/using the rootsh or openssh package.')
<         return
---
>     #if IS_ANDROID == False:
>     #  _output('Seattle is being installed on a Nokia N800/900 Internet Tablet.')
>     #  # JAC: I can't import this on Windows, so will do it here...
>     #  import pwd
>     #  # if the current user name is not 'root'
>     #  if pwd.getpwuid(os.getuid())[0] != 'root':
>     #    _output('Please run the installer as root. This can be done by ' \
>     #              + 'installing/using the rootsh or openssh package.')
>     #    return
